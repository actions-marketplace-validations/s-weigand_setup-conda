name: "Tests"
on: [push, pull_request]

jobs:
  jest-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: npm ci
      - name: Test Build
        run: npm run test_build
      - name: Checking format
        run: npm run format-check
      - name: Linting code
        run: npm run lint
      - name: Running jest tests
        run: npm test
      - name: Build dist
        run: npm run package
      - uses: actions/upload-artifact@v2
        with:
          name: dist-built
          path: dist/index.js

  test-integration-default:
    runs-on: ${{ matrix.os }}
    needs: jest-tests
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Download built dist
        uses: actions/download-artifact@v2
        with:
          name: dist-built
          path: dist
      - name: Check initial python version
        run: |
          python --version
          python -c "from __future__ import print_function;import sys;print(sys.executable);print(sys.version_info)"
      - name: Run setup-conda
        uses: ./
      - name: Check conda version
        run: conda --version
      - name: Check conda version, with bash on windows
        if: matrix.os == 'windows-latest'
        run: conda --version
        shell: bash
      - name: Check final python version
        run: |
          python --version
          python -c "from __future__ import print_function;import sys;print(sys.executable);print(sys.version_info)"

  test-integration-custom:
    runs-on: ${{ matrix.os }}
    needs: jest-tests
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Download built dist
        uses: actions/download-artifact@v2
        with:
          name: dist-built
          path: dist
      - name: Run setup-conda
        uses: ./
        with:
          update-conda: true
          python-version: 3.6
          conda-channels: anaconda, conda-forge
      - name: Check conda version
        run: conda --version
      - name: Check final python version
        run: |
          python --version
          python -c "from __future__ import print_function;import sys;print(sys.executable);print(sys.version_info)"

  test-no-activation:
    runs-on: ${{ matrix.os }}
    needs: jest-tests
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Download built dist
        uses: actions/download-artifact@v2
        with:
          name: dist-built
          path: dist
      - name: Check initial python version
        run: |
          python --version
          python -c "from __future__ import print_function;import sys;print(sys.executable);print(sys.version_info)"
      - name: Run setup-conda
        uses: ./
        with:
          activate-conda: false
      - name: Check conda version
        run: conda --version
      - name: Check final python version
        run: |
          python --version
          python -c "from __future__ import print_function;import sys;print(sys.executable);print(sys.version_info)"
      - name: Check env
        run: printenv

  test-no-activation-setup-python:
    runs-on: ${{ matrix.os }}
    needs: jest-tests
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Download built dist
        uses: actions/download-artifact@v2
        with:
          name: dist-built
          path: dist
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Check initial python version
        run: |
          python --version
          python -c "from __future__ import print_function;import sys;print(sys.executable);print(sys.version_info)"
      - name: Run setup-conda
        uses: ./
        with:
          activate-conda: false
      - name: Check conda version
        run: conda --version
      - name: Check final python version
        run: |
          python --version
          python -c "from __future__ import print_function;import sys;print(sys.executable);print(sys.version_info)"
      - name: Check env
        run: printenv
